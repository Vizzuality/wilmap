<?php

/**
 * @file
 * Contains wilmap_contributors.module.
 */

use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\Core\Session\AccountInterface;
use Drupal\field\Entity\FieldConfig;
use Drupal\node\NodeInterface;


/**
 * Implements hook_help().
 */
function wilmap_contributors_help($route_name, RouteMatchInterface $route_match)
{
    switch ($route_name) {
        // Main module help for the wilmap_contributors module.
        case 'help.page.wilmap_contributors':
            $output = '';
            $output .= '<h3>' . t('About') . '</h3>';
            $output .= '<p>' . t('WILMap Contributors features') . '</p>';
            return $output;

        default:
    }
}


/**
 * Implements hook_node_grants().
 */
function wilmap_contributors_node_grants(AccountInterface $account, $op)
{
    $grants = [];

    //kint($account);
    if ($id = $account->id()) {
        $grants['wilmap_contributors'] = array($id);
    }

    // Desconozco si estos controles se hacen aquÃ­ o en hook_node_access_records()
    // TODO: Allow for News, Topics and Entries should check user Countries
    // TODO: Also check Countries in user Regions

    return $grants;
}

/**
 * Implements hook_node_access_records().
 */
function wilmap_contributors_node_access_records(NodeInterface $node)
{
    $grants = [];

// kint($node);
    if (!$field_info = FieldConfig::loadByName('node', $node->bundle(),
      'field_contributors')
    ) {
        return $grants;
    }

    // Default, grant view
    $grants[] = array(
      'realm'        => 'all',
      'gid'          => 0,
      'grant_view'   => 1,
      'grant_update' => 0,
      'grant_delete' => 0,
    );

    if (!$node->isPublished()) {
        return $grants;
    }

    // Allow "update" if in contributors list
    // Add a realm for each associated user.
    foreach ($node->field_contributors->getValue() as $delta => $item) {
        $grants[] = [
          'realm'        => 'wilmap_contributors',
          'gid'          => $item['target_id'],
          'grant_view'   => 1,
          'grant_update' => 1,
          'grant_delete' => 0,
        ];
    }

    return $grants;
}

/******************************************************************************/
/* PREPROCESS                                                                 */
/******************************************************************************/


/**
 * hook template_preprocess_user()
 */
function wilmap_contributors_preprocess_user(&$variables)
{

    $account = $variables['user'];

    $ranking_service = \Drupal::service('wilmap_contributors.ranking');
    $contributors = intval($ranking_service->getUserContributions($account->id()));
    $ranking = intval($ranking_service->getUserRanking($account->id()));

    $variables['ranking'] = ($ranking < 10 && $ranking != 0)?'0'.$ranking:$ranking;
    $variables['contributions'] = ($contributors < 10 && $contributors != 0)?'0'.$contributors:$contributors;

    //kint($variables);

}
